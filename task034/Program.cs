// Задача 34: 
// Задайте массив заполненный случайными положительными трёхзначными числами. 
// Напишите программу, которая покажет количество чётных чисел в массиве.
// Пример: [345, 897, 568, 234] -> 2

//Вариант 1:
// void FillArray(int[] coll)                                                  // создаем метод FillArray для создания и печати массива
// {
//     for (int i = 0; i < coll.Length; i++)                                   // пока index меньше чем length будем делать ->
//     {
//         Console.Write($"{coll[i] = new Random().Next(100, 1000)}, ");      // выводим на печать собранный массив из цифр от 100 до 1000
//     }
//     Console.Write("\b\b");                                                 // убираем запятушку
// }

// int EvenNumbers(int[] arr)                 // создаем метод для проверки четности числа в массиве
// {
//     int result = 0;                        // создаем переменную result? которая будет подсчитывать четные числа с массива
//     for (int i = 0; i < arr.Length; i++)   // пока i меньше длинны полученного массива, то делаем ->
//     {
//         if (arr[i] % 2 == 0) result++;     // если выбранное из массива число делится на 2 без остатка, то прибавляем единичку к result
//     }
//     return result;                         // выводим result
// }

// int[] array = new int[new Random().Next(3, 10)];   // задаем массив с рандомным количеством цифр внутри 
// Console.Write("[");                                // начала печати результата
// FillArray(array);                                  // запускаем метод заполнения массива
// Console.Write($"] -> {EvenNumbers(array)}");       // выводим на печать результат


//Вариант 2(сбор массива отдельно от его печати):
// int[] FillArray()                                    // создаем метод FillArray для создания и печати массива
// {
//     int[] arr = new int[new Random().Next(3, 10)];   // задаем массив с рандомным количеством цифр внутри 
//     for (int i = 0; i < arr.Length; i++)             // пока index меньше чем length будем делать ->
//     {
//         arr[i] = new Random().Next(100, 1000);       // выводим на печать собранный массив из цифр от 100 до 1000
//     }
//     return arr;
// }

// void PrintArray(int[] array)              // создаем метод для печати массива
// {
//     int count = array.Length;
//     for (int i = 0; i < count; i++)
//     {
//         Console.Write($"{array[i]}, "); 
//     }
//     Console.Write("\b\b");
// }


// int EvenNumbers(int[] arr)                 // создаем метод для проверки четности числа в массиве
// {
//     int result = 0;                        // создаем переменную result? которая будет подсчитывать четные числа с массива
//     for (int i = 0; i < arr.Length; i++)   // пока i меньше длинны полученного массива, то делаем ->
//     {
//         if (arr[i] % 2 == 0) result++;     // если выбранное из массива число делится на 2 без остатка, то прибавляем единичку к result
//     }
//     return result;                         // выводим result
// }

// int[] array = FillArray();                  // запускаем сбор массива через метод (33)   
// Console.Write($"[");                        // начало печати вывода
// PrintArray(array);                          // выводим метод (43)    
// int result = EvenNumbers(FillArray());      // запускаем подсчет четных чисел в массиве через метод (54) 
// Console.Write($"] -> {result}");            // выводим на печать результат



//Вариант 3(вывод через string.Join):
int[] array = FillArray();                                      // запускаем сбор массива через метод  
int result = NotEvenI(array);                                   // запускаем метод для проверки не четности индекса массива 
Console.Write($"[{string.Join(", ", array)}] -> {result}");     // выводим на печать результат

int[] FillArray()                                // создаем метод FillArray для создания рандом массива
{
    Random rnd = new Random();                   // сокращение до rnd
    int[] arr =  new int[rnd.Next(3, 10)];       // сбор рандомного кол-ва символов в массиве
    for (int i = 0; i < arr.Length; i++)         // пока index меньше чем length будем делать ->
    {
        arr[i] =rnd.Next(100, 1000);             // собираем рандомный массив из цифр от 100 до 1000
    }
    return arr;
}

int NotEvenI(int[] arr)                        // создаем метод для проверки не четности индекса массива
{
    int sum = 0;                               // создаем переменную sum со стартовым значением 0
    for (int i = 0; i < arr.Length; i++)       // пока i меньше длинны полученного массива, то делаем ->
    {
        if (i % 2 != 0) sum = sum + arr[i];    // если выбранный индекс делится на 2 с остатком, то прибавляем к сумме символ под данным индексом
    }
    return sum;                                // выводим sum
}

